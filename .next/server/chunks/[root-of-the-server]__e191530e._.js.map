{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/edisa/Desktop/Personal/Portfolio/Portfolio/lib/firebaseAdmin.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\r\n\r\nif (!admin.apps.length) {\r\n  admin.initializeApp({\r\n    credential: admin.credential.cert({\r\n      projectId: process.env.FIREBASE_PROJECT_ID,\r\n      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\r\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n    }),\r\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n  });\r\n}\r\n\r\nexport const db = admin.database();\r\nexport { admin };\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,CAAC,2HAAA,CAAA,OAAU,CAAC,MAAM,EAAE;IACtB,2HAAA,CAAA,gBAAmB,CAAC;QAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;YAChC,WAAW,QAAQ,GAAG,CAAC,mBAAmB;YAC1C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YAC9D,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAChD;QACA,aAAa,QAAQ,GAAG,CAAC,qBAAqB;IAChD;AACF;AAEO,MAAM,KAAK,2HAAA,CAAA,WAAc","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/edisa/Desktop/Personal/Portfolio/Portfolio/lib/verifyToken.ts"],"sourcesContent":["import { admin } from './firebaseAdmin';\r\n\r\nexport async function verifyIdToken(token: string) {\r\n  try {\r\n    const decodedToken = await admin.auth().verifyIdToken(token);\r\n    return decodedToken;\r\n  } catch (err) {\r\n    console.error('Token verification failed:', err);\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,eAAe,cAAc,KAAa;IAC/C,IAAI;QACF,MAAM,eAAe,MAAM,4JAAA,CAAA,QAAK,CAAC,IAAI,GAAG,aAAa,CAAC;QACtD,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/edisa/Desktop/Personal/Portfolio/Portfolio/pages/api/works.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next';\r\nimport { db } from '@/lib/firebaseAdmin';\r\nimport { verifyIdToken } from '@/lib/verifyToken';\r\nimport type { Works } from '@/types/Works';\r\n\r\nconst now = () => new Date(Date.now()).toISOString();\r\n\r\nconst authenticate = async (req: NextApiRequest, res: NextApiResponse): Promise<boolean> => {\r\n  try {\r\n    const authHeader = req.headers.authorization;\r\n\r\n    if (!authHeader?.startsWith('Bearer ')) {\r\n      res.status(401).json({ error: 'Unauthorized: Missing or malformed token' });\r\n      return false;\r\n    }\r\n\r\n    const token = authHeader.split(' ')[1];\r\n    const decodedToken = await verifyIdToken(token);\r\n\r\n    if (!decodedToken) {\r\n      res.status(401).json({ error: 'Unauthorized: Invalid token' });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Authentication error:', error);\r\n    res.status(401).json({ error: 'Unauthorized' });\r\n    return false;\r\n  }\r\n};\r\n\r\nconst handleGet = async (_req: NextApiRequest, res: NextApiResponse) => {\r\n  try {\r\n    const snapshot = await db.ref('works').once('value');\r\n    const data = snapshot.val() as Record<string, Omit<Works, 'uid'>> | null;\r\n\r\n    const works: (Works & { uid: string })[] = data\r\n      ? Object.entries(data).map(([uid, work]) => ({\r\n          uid,\r\n          ...work,\r\n        }))\r\n      : [];\r\n\r\n    return res.status(200).json(works);\r\n  } catch (err) {\r\n    console.error('Error fetching works:', err);\r\n    return res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n};\r\n\r\nconst handlePost = async (req: NextApiRequest, res: NextApiResponse) => {\r\n  const { title, start_date, end_date } = req.body;\r\n\r\n  if (!title || !start_date || !end_date) {\r\n    return res.status(400).json({ error: 'Missing required fields: title, start_date, end_date' });\r\n  }\r\n\r\n  try {\r\n    const ref = db.ref('works').push();\r\n    const uid = ref.key;\r\n\r\n    if (!uid) {\r\n      return res.status(500).json({ error: 'Failed to generate ID' });\r\n    }\r\n\r\n    await ref.set({\r\n      title,\r\n      start_date,\r\n      end_date,\r\n      created_at: now(),\r\n      updated_at: now(),\r\n    });\r\n\r\n    return res.status(201).json({ message: 'Work added successfully', uid });\r\n  } catch (err) {\r\n    console.error('Error adding work:', err);\r\n    return res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n};\r\n\r\nconst handlePut = async (req: NextApiRequest, res: NextApiResponse) => {\r\n  const { uid, title, start_date, end_date } = req.body;\r\n\r\n  if (!uid || !title || !start_date || !end_date) {\r\n    return res.status(400).json({ error: 'Missing required fields: uid, title, start_date, end_date' });\r\n  }\r\n\r\n  try {\r\n    await db.ref(`works/${uid}`).update({\r\n      title,\r\n      start_date,\r\n      end_date,\r\n      updated_at: now(),\r\n    });\r\n\r\n    return res.status(200).json({ message: 'Work updated successfully' });\r\n  } catch (err) {\r\n    console.error('Error updating work:', err);\r\n    return res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n};\r\n\r\nconst handleDelete = async (req: NextApiRequest, res: NextApiResponse) => {\r\n  const { uid } = req.query;\r\n\r\n  if (!uid || typeof uid !== 'string') {\r\n    return res.status(400).json({ error: 'Missing or invalid uid in query' });\r\n  }\r\n\r\n  try {\r\n    await db.ref(`works/${uid}`).remove();\r\n    return res.status(200).json({ message: 'Work deleted successfully' });\r\n  } catch (err) {\r\n    console.error('Error deleting work:', err);\r\n    return res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n};\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  const method = req.method || 'GET';\r\n  const protectedMethods = ['POST', 'PUT', 'DELETE'];\r\n\r\n  if (method === 'OPTIONS') {\r\n    res.setHeader('Allow', 'GET,POST,PUT,DELETE,OPTIONS');\r\n    return res.status(200).end();\r\n  }\r\n\r\n  if (protectedMethods.includes(method)) {\r\n    const isAuthenticated = await authenticate(req, res);\r\n    if (!isAuthenticated) return;\r\n  }\r\n\r\n  switch (method) {\r\n    case 'GET':\r\n      return handleGet(req, res);\r\n    case 'POST':\r\n      return handlePost(req, res);\r\n    case 'PUT':\r\n      return handlePut(req, res);\r\n    case 'DELETE':\r\n      return handleDelete(req, res);\r\n    default:\r\n      return res.status(405).json({ error: 'Method Not Allowed' });\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}